[package]
name = "bevy_transform_interpolation"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["Joona Aalto <jondolf.dev@gmail.com>"]
description = "Transform interpolation for fixed timesteps for the Bevy game engine"
documentation = "https://docs.rs/bevy_transform_interpolation"
repository = "https://github.com/Jondolf/bevy_transform_interpolation"
readme = "README.md"
keywords = ["gamedev", "interpolation", "easing", "bevy"]
categories = ["game-development"]

[features]
default = ["std"]

# Enable data serialization/deserialization using `serde`.
serialize = ["dep:serde", "bevy/serialize"]

# Enable the Rust standard library.
std = ["bevy/std"]

# Enable `libm` math operations for `no_std` environments and cross-platform determinism.
libm = ["bevy/libm"]

# Rely on `critical-section` for synchronization primitives.
critical-section = ["bevy/critical-section"]

[dependencies]
bevy = { version = "0.16.0-rc", default-features = false }

# Serialization
serde = { version = "1.0", default-features = false, optional = true }

[dev-dependencies]
bevy = { version = "0.16.0-rc", default-features = false, features = [
    "bevy_core_pipeline",
    "bevy_text",
    "bevy_ui",
    "bevy_asset",
    "bevy_render",
    "bevy_sprite",
    "default_font",
    "bevy_winit",
    "bevy_window",
    "x11",
] }

[lints.clippy]
std_instead_of_core = "warn"
std_instead_of_alloc = "warn"
alloc_instead_of_core = "warn"
